version: '3'

services:
  redis:
    image: redis:7.0.0
    restart: always
    ports:
      - '6379:6379'
    networks:
      - concert_network

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234                # 설정할 루트 비밀번호
      MYSQL_DATABASE: hhplus                   # 생성할 기본 데이터베이스 이름
    ports:
      - '3346:3306'
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - concert_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - concert_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # 자동 토픽 생성 활성화
    depends_on:
      - zookeeper
    networks:
      - concert_network

volumes:
  mysqldata:

networks:
  concert_network:
    driver: bridge


# 도커 컴포즈 설치: docker-compose -p concert -f docker-compose-concert.yml up -d
# 카프카 접속 명령어: docker exec -it kafka bash